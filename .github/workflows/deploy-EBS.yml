name: Deploy to AWS Elastic Beanstalk

on:
  push:
    branches:
      - new-branch-for-ebs

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install AWS CLI and Elastic Beanstalk CLI
        run: |
          sudo apt-get update
          sudo apt-get install python3-pip -y
          pip3 install --upgrade pip
          pip3 install awsebcli --upgrade --user

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
          aws-region: 'ap-northeast-1'

      - name: Deploy to Elastic Beanstalk
        run: |
          eb --version  # Check Elastic Beanstalk CLI version
          eb init -p 'docker running on 64bit Amazon Linux 2023' -r 'ap-northeast-1' 'ebs-deployment'
        env:
          AWS_DEFAULT_REGION: ap-northeast-1
          AWS_REGION: ap-northeast-1
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_KEY }}
          
      - name: Build, tag, and push image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_TAG: latest
          REPOSITORY: react-app-image
        run: |
          docker build -t $ECR_REGISTRY/$REPOSITORY:$IMAGE_TAG ./app
          docker push $ECR_REGISTRY/$REPOSITORY:$IMAGE_TAG
          echo "image=$ECR_REGISTRY/$REPOSITORY:$IMAGE_TAG" >> $GITHUB_OUTPUT

      - name: Deploy to Elastic Beanstalk
        run: |
          eb deploy Ebs-deployment-env2# Deploy your application to Elastic Beanstalk
